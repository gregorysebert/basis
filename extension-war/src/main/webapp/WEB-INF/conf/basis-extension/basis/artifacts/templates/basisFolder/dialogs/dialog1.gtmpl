<%
	import java.text.SimpleDateFormat;
	import java.util.Calendar;
	import org.exoplatform.webui.form.UIFormSelectBox;
	import org.exoplatform.webui.form.UIFormStringInput;
	import org.exoplatform.webui.core.model.SelectItemOption;
	import javax.jcr.Node;
	import basis.selector.service.BasisSelectorService;
	import javax.servlet.http.HttpSession;
	import org.exoplatform.portal.webui.util.Util;
	SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
    String todayS=sdf.format(new Date());
	private String getTimestampName() {
		   Calendar now = Calendar.getInstance();
		   SimpleDateFormat formatter = new SimpleDateFormat("hh'h'mm'm'ss'.00000000'");
		   return formatter.format(now.getTime());
	}
	String timestampName = getTimestampName();
	Node currentNode = uicomponent.getCurrentNode();
	private Node getBONode(Node currentNode) {
		   Node parentNode = currentNode.getParent();
		   if (! parentNode.isNodeType("basis:basisBO")) {
			   return getBONode(parentNode); 
		   }
		   return parentNode;
	}
	HttpSession httpSession = Util.getPortalRequestContext().getRequest().getSession();
%>
<% 
if(uicomponent.isEditing()) {
uicomponent.addInterceptor("ecm-explorer/interceptor/GenerateVersionInterceptor.groovy", "post");
}
%>
<style type="text/css">
    .UIJCRExplorerPortlet .UIPopupWindow .UIWindowContent .UISearch {
        height: 39px !important;
    }
    .Search16x16Icon {
        background: url('/ecmexplorer/skin/webui/component/explorer/../../../icons/16x16/DefaultSkin/SearchPage.gif') no-repeat left center;
        width: 16px;
        height: 16px;
    }
    .UIPopupWindow .PopupContent {
    	height: 500px !important;
	}
	#folderLanguage {
    	font-size: 16px;
	  	width: 50px;
	}
	#folderType {
    	font-size: 16px;
	  	width: 50px;
	}
	#folderCloseBeforeDate{
    	font-size: 16px;
	  	width: 90px;
	}
	#folderCloseOnDate{
    	font-size: 16px;
	  	width: 90px;
	}
	#inputfolderRNN{
		font-size: 16px;
		width: 130px;
	}
	#folderExternalReference{
		font-size: 16px;
		width: 450px;
	}
	#folderInternSender{
		font-size: 16px;
		width: 500px;
	}
	#folderStatus{
    	font-size: 16px;
	  	width: 200px;
	}
	
</style>
<script type="text/javascript">	
	function saveRNN(source,destination)
	{
		var inputFolderRNN = document.getElementById(source);
		var folderRNN = document.getElementById(destination);
		if((inputFolderRNN != null)&&(folderRNN!=null)){
			folderRNN.value=inputFolderRNN.value;
		}
	}

	function checkFieldRNN(source,destination,link)
	{
		var field = document.getElementById(source);
		saveRNN(source,destination);
		if((field!= null)&&(field.value!='')){
            var str2 = field.value.replace(/[^0-9]/g, "");
            if(97-((parseInt(str2.substring(0, str2.length-2), 10) % 97)) != (parseInt(str2.substring(str2.length-2, str2.length), 10))){
                field.focus();
                alert('RNN is not Valid!');
            }
            else
            {
                if (str2.length == 11){
                    field.value = str2.substring(0, 2) + '.' + str2.substring(2, 4) + '.' + str2.substring(4, 6) + '-' + str2.substring(6, 9) + '.' + str2.substring(9, 11);
                    saveRNN(source,destination);
					eval(link);
                }
                else{
                    field.focus();
                    alert('RNN is not Valid!');
                }
            }
		}
		else {
		eval(link);
		}
	}
</script>
<div class="UIForm FormLayout">
	<% uiform.begin() %> 
		<div class="HorizontalLayout">
			<table class="UIFormGrid">
			    <tr style="display:none;">
		          <td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderNumber")%></td>
		          <td class="FieldComponent">
		            $timestampName 
		               <div style="display:none;"><%
		              String[] folderNumberField = ["jcrPath=/node", "mixintype=mix:versionable", "editable=if-null", timestampName] ;
		              uicomponent.addTextField("name", folderNumberField) ;
		            %></div>
		          </td>
        		</tr>
				<tr>
				    <td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderLanguage")%></td>
				    <td class="FieldComponent" colspan="6">
				        <%
				        String[] folderLanguageField = ["jcrPath=/node/basis:folderLanguage", "options=NL,FR,EN", "onchange=true"];
				        uicomponent.addSelectBoxField("folderLanguage", folderLanguageField);
				        UIFormSelectBox folderLanguageSelectBox = uicomponent.findComponentById("folderLanguage");
				        String language = folderLanguageSelectBox.getValue();
				        String folderLanguage = httpSession.getAttribute("folderLanguage");
				        Node folderSelectorNode = getBONode(currentNode).getNode("folderSelector.txt");
				        BasisSelectorService basisSelectorService = new BasisSelectorService(folderSelectorNode, "Status", language);
			            String statusOptions = basisSelectorService.getOptions();
			            UIFormSelectBox folderStatusSelectBox = uicomponent.findComponentById("folderStatus");
			            if(folderStatusSelectBox != null && language != folderLanguage) {
				            List<SelectItemOption<String>> optionsList = new ArrayList<SelectItemOption<String>>();
				            String[] statusOptionsList = statusOptions.split(',');
			                for(String statusOption:statusOptionsList){
			                    optionsList.add(new SelectItemOption<String>(statusOption,statusOption));
			                }    
			            	folderStatusSelectBox.setOptions(optionsList);
			            }
			            basisSelectorService = new BasisSelectorService(folderSelectorNode, "Type", language);
			            String typeOptions = basisSelectorService.getOptions();
			            UIFormSelectBox folderTypeSelectBox = uicomponent.findComponentById("folderType");
			            if(folderTypeSelectBox != null && language != folderLanguage) {
				            optionsList = new ArrayList<SelectItemOption<String>>();
				            String[] typeOptionsList = typeOptions.split(',');
			                for(String typeOption:typeOptionsList){
			                    optionsList.add(new SelectItemOption<String>(typeOption,typeOption));
			                }    
			                folderTypeSelectBox.setOptions(optionsList);
			            }
			            httpSession.setAttribute("folderLanguage", language);
				        %>
				    </td>
				</tr>
				<tr>
				    <td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderType")%></td>
				    <td class="FieldComponent" colspan="6">
				        <%
				        String[] folderTypeField = ["jcrPath=/node/basis:folderType", "options="+typeOptions, "onchange=false"];
				        uicomponent.addSelectBoxField("folderType", folderTypeField);
				        %>
				    </td>
				</tr>
				<tr style="display:none;">
					<td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderRegistrationDate")%></td>
					<td class="FieldComponent">
						<%
						if(!uicomponent.isEditing()) {
						String[] folderRegistrationDateField = ["jcrPath=/node/basis:folderRegistrationDate", ("defaultValues="+todayS)];
						uicomponent.addCalendarField("folderRegistrationDate", folderRegistrationDateField);
						}
						%>
					</td>
				</tr>
				<tr>
					<td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderRNN")%></td>
					<td class="FieldComponent">
					    <div style="display:none;">
							<%
							String[] folderRNNField = ["jcrPath=/node/basis:folderRNN"];
							uicomponent.addTextField("folderRNN", folderRNNField);
							%>
						</div>
						<%
						UIFormStringInput folderRNNFieldStringInput = uicomponent.findComponentById("folderRNN");
						String folderRNNVal ="''"; 
						if (folderRNNFieldStringInput.getValue()!=null)
						{
						folderRNNVal = folderRNNFieldStringInput.getValue(); 
						}
						%>
						<input id="inputfolderRNN" type="text" name="inputfolderRNN"  value=<%=folderRNNVal%> onchange="javascript:checkFieldRNN('inputfolderRNN','folderRNN','')">
					</td>
					<td class="FieldComponent">
			          	<%
			          	 String[] folderInternSenderField = ["jcrPath=/node/basis:folderInternSender", "defaultValues=", "selectorIcon=ActionIcon Search16x16Icon","selectorClass=be.bull.spff.selector.UserSpffSelector", "options=null"];
			           	uicomponent.addActionField("folderInternSender", folderInternSenderField);
			          	%>
			        </td>
				</tr>
				<tr>
					<td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderExternalReference")%></td>
					<td class="FieldComponent">
						<%
						String[] folderExternalReferenceField = ["jcrPath=/node/basis:folderExternalReference"];
						uicomponent.addTextField("folderExternalReference", folderExternalReferenceField);
						%>
					</td>
				</tr>
				<tr>
				    <td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderStatus")%></td>
				    <td class="FieldComponent" colspan="6">
				        <%
				        String[] folderStatusField = ["jcrPath=/node/basis:folderStatus", "options="+statusOptions, "validate=empty", "onchange=true"];
				        uicomponent.addSelectBoxField("folderStatus", folderStatusField);
				        %>
				    </td>
				</tr>
				<tr>
					<td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderCloseBeforeDate")%></td>
					<td class="FieldComponent">
						<%
						String[] folderCloseBeforeDateField = ["jcrPath=/node/basis:folderCloseBeforeDate", "visible=true", "validate=datetime", ("defaultValues="+todayS)];
						uicomponent.addCalendarField("folderCloseBeforeDate", folderCloseBeforeDateField);
						%>
					</td>
				</tr>
				<%
				folderStatusSelectBox = uicomponent.findComponentById("folderStatus");
				if(folderStatusSelectBox.getValue().equals("closed") || folderStatusSelectBox.getValue().equals("afgesloten") || folderStatusSelectBox.getValue().equals("clôturé") 
				|| folderStatusSelectBox.getValue().equals("cancelled") || folderStatusSelectBox.getValue().equals("geannulleerd") || folderStatusSelectBox.getValue().equals("annulé")) {
				%>
				<tr>
					<td class="FieldLabel"><%=_ctx.appRes("basisFolder.label.folderCloseOnDate")%></td>
					<td class="FieldComponent">
						<%
						String[] folderCloseOnDateField = ["jcrPath=/node/basis:folderCloseOnDate", "visible=true", "validate=datetime", ("defaultValues="+todayS)];
						uicomponent.addCalendarField("folderCloseOnDate", folderCloseOnDateField);
						%>
					</td>
				</tr>
				<%
				}
				%>
				<tr>
					<td class="FieldLabel"><%=_ctx.appRes("basis.label.comments")%></td>
					<td class="FieldComponent">
						<%
						String[] folderCommentsField = ["jcrPath=/node/basis:folderComments", "options=toolbar:CompleteWCM,'height:410px',noSanitization", ""] ;
						uicomponent.addRichtextField("folderComments", folderCommentsField);
						%>
					</td>
				</tr>
			</table>
			<div class="UIAction"> 
					<table class="ActionContainer">
						<tr>
							<td>
						  <% for(action in uicomponent.getActions()) { 
								 String actionLabel = _ctx.appRes(uicomponent.getName() + ".action." + action);
								 String link = uicomponent.event(action);
								 if (action.equals("Close")){%>
									<div onclick="$link" class="ActionButton LightBlueStyle">
										<div class="ButtonLeft">
											<div class="ButtonRight">
												<div class="ButtonMiddle">
													<a href="javascript:void(0);">$actionLabel</a>
												</div>
											</div>
										</div>
									</div> 
								 <%} else if (!action.equals("Save")) {
								 link=link.replace("'", "\\'");
								  %>
								    <a href="javascript:checkFieldRNN('inputfolderRNN','folderRNN','$link')" class="ActionButton LightBlueStyle">
										<div class="ButtonLeft">
											<div class="ButtonRight">
												<div class="ButtonMiddle">
													$actionLabel
												</div>
											</div>
										</div>
									</a>
									
								<%}
							}%>         
						</td>
					  </tr>
					</table>
			</div>
		    <%/*end render action*/%>    
		</div>
	<%uiform.end()%>
</div>